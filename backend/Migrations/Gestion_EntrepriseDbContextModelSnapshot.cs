// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Models;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(Gestion_EntrepriseDbContext))]
    partial class Gestion_EntrepriseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Avance", b =>
                {
                    b.Property<int>("AvanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AvanceId"));

                    b.Property<DateOnly>("DateDebut")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DateProchaineTranche")
                        .HasColumnType("date");

                    b.Property<decimal>("MontantRestant")
                        .HasColumnType("decimal(60, 2)");

                    b.Property<decimal>("MontantTotal")
                        .HasColumnType("decimal(60, 2)");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TranchesRestantes")
                        .HasColumnType("int");

                    b.Property<int>("TranchesTotales")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("id_employe")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("AvanceId");

                    b.HasIndex("id_employe");

                    b.ToTable("Avance", (string)null);
                });

            modelBuilder.Entity("DemandeAvance", b =>
                {
                    b.Property<string>("EmployeId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("DemandeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DemandeId"));

                    b.Property<DateOnly>("DateDemande")
                        .HasColumnType("date");

                    b.Property<int>("EmployeUserId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Montant")
                        .HasColumnType("decimal(60, 2)");

                    b.Property<int>("NombreTranches")
                        .HasColumnType("int");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TypeAvance")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("EmployeId", "DemandeId");

                    b.HasIndex("EmployeUserId");

                    b.ToTable("DemandeAvance", (string)null);
                });

            modelBuilder.Entity("Employe", b =>
                {
                    b.Property<string>("id_employe")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("date_depart")
                        .HasColumnType("date");

                    b.Property<DateOnly>("date_embauche")
                        .HasColumnType("date");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("id_poste")
                        .HasColumnType("int");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("tel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("id_employe");

                    b.HasIndex("id_poste");

                    b.ToTable("Employe", (string)null);
                });

            modelBuilder.Entity("Inbox", b =>
                {
                    b.Property<int>("InboxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("InboxId"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DateNotification")
                        .HasColumnType("date");

                    b.Property<int>("DemandeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeId")
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("EmployeUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsRead")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("InboxId");

                    b.HasIndex("AdminId");

                    b.HasIndex("EmployeUserId");

                    b.HasIndex("EmployeId", "DemandeId");

                    b.ToTable("Inbox", (string)null);
                });

            modelBuilder.Entity("Poste_travail", b =>
                {
                    b.Property<int>("id_poste")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_poste"));

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<string>("design")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("heures_travaillees")
                        .HasColumnType("int");

                    b.Property<decimal>("salaire_horaire")
                        .HasColumnType("decimal(60, 2)");

                    b.Property<string>("statut")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id_poste");

                    b.ToTable("Poste_travail", (string)null);
                });

            modelBuilder.Entity("Salaire", b =>
                {
                    b.Property<int>("id_salaire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_salaire"));

                    b.Property<int>("mois")
                        .HasColumnType("int");

                    b.Property<int>("annee")
                        .HasColumnType("int");

                    b.Property<decimal?>("avance")
                        .HasColumnType("decimal(60, 2)");

                    b.Property<DateOnly>("date_paiement")
                        .HasColumnType("date");

                    b.Property<string>("id_employe")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("montant")
                        .HasColumnType("decimal(60, 2)");

                    b.HasKey("id_salaire", "mois", "annee");

                    b.HasIndex("id_employe");

                    b.ToTable("Salaire", (string)null);
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmployeId")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("UserId");

                    b.HasIndex("EmployeId")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Avance", b =>
                {
                    b.HasOne("Employe", "Employe")
                        .WithMany("Avances")
                        .HasForeignKey("id_employe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Avance_Employe");

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("DemandeAvance", b =>
                {
                    b.HasOne("User", "Employe")
                        .WithMany()
                        .HasForeignKey("EmployeUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DemandeAvance_Employe");

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("Employe", b =>
                {
                    b.HasOne("Poste_travail", "Poste_Travail")
                        .WithMany("Employes")
                        .HasForeignKey("id_poste")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Poste_Travail");
                });

            modelBuilder.Entity("Inbox", b =>
                {
                    b.HasOne("User", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("User", "Employe")
                        .WithMany()
                        .HasForeignKey("EmployeUserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DemandeAvance", "DemandeAvance")
                        .WithMany()
                        .HasForeignKey("EmployeId", "DemandeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Admin");

                    b.Navigation("DemandeAvance");

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("Salaire", b =>
                {
                    b.HasOne("Employe", "Employe")
                        .WithMany("Salaires")
                        .HasForeignKey("id_employe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.HasOne("Employe", "Employe")
                        .WithOne("User")
                        .HasForeignKey("User", "EmployeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_User_Employe");

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("Employe", b =>
                {
                    b.Navigation("Avances");

                    b.Navigation("Salaires");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Poste_travail", b =>
                {
                    b.Navigation("Employes");
                });
#pragma warning restore 612, 618
        }
    }
}
